from mil.army.usace.hec.vortex.io import BatchImporter
from mil.army.usace.hec.vortex.geo import WktFactory
import glob
import os

# cd C:\Apps\HEC-HMS-4.10-beta.9
# HEC-HMS.cmd -script "C:\jy\Atlas14_temporal_distribution\nc_to_dss.jy"

variables = ['PrecipInc']

# clip_shp = r"V:\projects\p00659_dec_glo_phase3\01_processing\GIS\Precip_Extents.shp"
clip_shp = r"Z:\Z GIS\Amite\Amite_bbox_Albers.shp"
clip_shp = r"Z:\Z GIS\Greenbelt\Greenbelt\Greenbelt_Bounding_Box.shp"

wkt = 'PROJCS["NAD_1983_StatePlane_Louisiana_South_FIPS_1702_Feet",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Lambert_Conformal_Conic"],PARAMETER["False_Easting",3280833.333333333],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",-91.33333333333333],PARAMETER["Standard_Parallel_1",29.3],PARAMETER["Standard_Parallel_2",30.7],PARAMETER["Latitude_Of_Origin",28.5],UNIT["Foot_US",0.3048006096012192]]'

geo_options = {
    'pathToShp': clip_shp,
    'targetCellSize': '2000',
    # 'targetWkt': WktFactory.shg(),
    'targetWkt': wkt,
    'resamplingMethod': 'Bilinear'
}

# in_dir = r"Z:\py\Atlas14_temporal_distribution\output\Texas\nc"
in_dir = r"Z:\py\Atlas14_temporal_distribution\output\Southeast\nc"
f = glob.glob(in_dir+"//*.nc")
print ('*.nc Files found:' + str(len(f)))

out_dir = r"c:\jy\Atlas14_temporal_distribution\dss"

for afile in f:
    head, tail = os.path.split(afile)
    in_files = [afile]
    
    partA_list = tail.split("_")[1:5]
    partA = ' '.join(partA_list)
    
    partB_list = tail.split(".")[0].split("_")[5:-1]
    partB = ' '.join(partB_list)

    partF = tail.split("_")[0]
    
    write_options = {
    'partA': partA,
    'partB': partB,
    'partF': partF
    }

    # print write_options

    destination = out_dir + '//' + tail.split(".")[0]+".dss"  
    # destination = out_dir + '//Atlas14.dss'

    myImport = BatchImporter.builder() \
        .inFiles(in_files) \
        .variables(variables) \
        .geoOptions(geo_options) \
        .destination(destination) \
        .writeOptions(write_options) \
        .build()
    
    # myImport = BatchImporter.builder() \
    #     .inFiles(in_files) \
    #     .variables(variables) \
    #     .destination(destination) \
    #     .writeOptions(write_options) \
    #     .build()

    myImport.process()

# print afile
# print stormId
# print ensembleId
# print destination